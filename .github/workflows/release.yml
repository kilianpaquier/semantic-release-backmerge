# Code generated by craft; DO NOT EDIT.

name: Release
run-name: Release

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: Dry run
        type: boolean
        default: false

jobs:

  version:
    name: Version
    runs-on: ubuntu-latest
    if: github.ref_protected == true
    environment: release
    outputs:
      version: v${{ steps.semantic_release.outputs.new_release_version }}
      release: ${{ steps.release.outputs.release }}
    env:
      GIT_AUTHOR_NAME: ${{ github.triggering_actor }}
      GIT_AUTHOR_EMAIL: ${{ github.triggering_actor }}@users.noreply.github.com
      GIT_COMMITTER_NAME: ${{ github.triggering_actor }}
      GIT_COMMITTER_EMAIL: ${{ github.triggering_actor }}@users.noreply.github.com
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - id: sha
        run: echo "sha=$(echo "$GITHUB_REF_NAME" | sha256sum | cut -c -8)" >> $GITHUB_OUTPUT
      # https://github.com/marketplace/actions/action-for-semantic-release
      - id: semantic_release
        uses: cycjimmy/semantic-release-action@v4
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/commit-analyzer
            @semantic-release/exec
            @semantic-release/git
            @semantic-release/github
            @semantic-release/npm
            @semantic-release/release-notes-generator
            conventional-changelog-conventionalcommits
            semantic-release-license
          dry_run: true
          tag_format: v${version}
          branches: |
            [
              "(master|main)",
              "v+([0-9])?(.+([0-9]))",
              { "name": "next", "prerelease": true },
              { "name": "beta", "prerelease": true },
              { "name": "alpha", "prerelease": true },
              { "name": "staging", "prerelease": "beta" },
              { "name": "develop", "prerelease": "alpha" },
              { "name": "${{ github.ref_name }}", "prerelease": "${{ steps.sha.outputs.sha }}" }
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: echo $VERSION
        env:
          VERSION: v${{ steps.semantic_release.outputs.new_release_version }}
      - id: release
        run: |
          if [[ $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "release=true" >> $GITHUB_OUTPUT
          fi
        env:
          VERSION: ${{ steps.semantic_release.outputs.new_release_version }}

  node-build:
    name: Node Build
    runs-on: ubuntu-latest
    if: github.ref_protected == true
    needs: version
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.1.7
      - run: bun install --frozen-lockfile
      - run: bun run build
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist
          retention-days: 1

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.ref_protected == true
    environment: release
    needs:
      - node-build
    env:
      GIT_AUTHOR_NAME: ${{ github.triggering_actor }}
      GIT_AUTHOR_EMAIL: ${{ github.triggering_actor }}@users.noreply.github.com
      GIT_COMMITTER_NAME: ${{ github.triggering_actor }}
      GIT_COMMITTER_EMAIL: ${{ github.triggering_actor }}@users.noreply.github.com
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - uses: actions/download-artifact@v4
        with:
          name: build
          path: dist
      # https://github.com/marketplace/actions/action-for-semantic-release
      - id: semantic-release
        uses: cycjimmy/semantic-release-action@v4
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/commit-analyzer
            @semantic-release/exec
            @semantic-release/git
            @semantic-release/github
            @semantic-release/npm
            @semantic-release/release-notes-generator
            conventional-changelog-conventionalcommits
            semantic-release-license
          dry_run: ${{ inputs.dry_run }}
          tag_format: v${version}
          branches: |
            [
              "(master|main)",
              "v+([0-9])?(.+([0-9]))",
              { "name": "next", "prerelease": true },
              { "name": "beta", "prerelease": true },
              { "name": "alpha", "prerelease": true },
              { "name": "staging", "prerelease": "beta" },
              { "name": "develop", "prerelease": "alpha" }
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}